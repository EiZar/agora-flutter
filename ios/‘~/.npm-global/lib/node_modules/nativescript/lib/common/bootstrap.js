"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const yok_1 = require("./yok");
const _ = require("lodash");
global._ = _;
global.$injector = yok_1.injector;
require("colors");
yok_1.injector.require("errors", "./errors");
yok_1.injector.requirePublic("fs", "./file-system");
yok_1.injector.require("hostInfo", "./host-info");
yok_1.injector.require("osInfo", "./os-info");
yok_1.injector.require("dispatcher", "./dispatchers");
yok_1.injector.require("commandDispatcher", "./dispatchers");
yok_1.injector.require("resources", "./resource-loader");
yok_1.injector.require("stringParameter", "./command-params");
yok_1.injector.require("stringParameterBuilder", "./command-params");
yok_1.injector.require("commandsService", "./services/commands-service");
yok_1.injector.require("messagesService", "./services/messages-service");
yok_1.injector.require("cancellation", "./services/cancellation");
yok_1.injector.require("hooksService", "./services/hooks-service");
yok_1.injector.require("httpClient", "./http-client");
yok_1.injector.require("childProcess", "./child-process");
yok_1.injector.require("prompter", "./prompter");
yok_1.injector.require("projectHelper", "./project-helper");
yok_1.injector.require("pluginVariablesHelper", "./plugin-variables-helper");
yok_1.injector.requireCommand(["help", "/?"], "./commands/help");
yok_1.injector.requireCommand("usage-reporting", "./commands/analytics");
yok_1.injector.requireCommand("error-reporting", "./commands/analytics");
yok_1.injector.requireCommand("dev-post-install", "./commands/post-install");
yok_1.injector.requireCommand("autocomplete|*default", "./commands/autocompletion");
yok_1.injector.requireCommand("autocomplete|enable", "./commands/autocompletion");
yok_1.injector.requireCommand("autocomplete|disable", "./commands/autocompletion");
yok_1.injector.requireCommand("autocomplete|status", "./commands/autocompletion");
yok_1.injector.requireCommand(["device|*list", "devices|*list"], "./commands/device/list-devices");
yok_1.injector.requireCommand(["device|android", "devices|android"], "./commands/device/list-devices");
yok_1.injector.requireCommand(["device|ios", "devices|ios"], "./commands/device/list-devices");
yok_1.injector.requireCommand("device|log", "./commands/device/device-log-stream");
yok_1.injector.requireCommand("device|run", "./commands/device/run-application");
yok_1.injector.requireCommand("device|stop", "./commands/device/stop-application");
yok_1.injector.requireCommand("device|list-applications", "./commands/device/list-applications");
yok_1.injector.requireCommand("device|uninstall", "./commands/device/uninstall-application");
yok_1.injector.requireCommand("device|list-files", "./commands/device/list-files");
yok_1.injector.requireCommand("device|get-file", "./commands/device/get-file");
yok_1.injector.requireCommand("device|put-file", "./commands/device/put-file");
yok_1.injector.require("iosDeviceOperations", "./mobile/ios/device/ios-device-operations");
yok_1.injector.require("deviceDiscovery", "./mobile/mobile-core/device-discovery");
yok_1.injector.require("iOSDeviceDiscovery", "./mobile/mobile-core/ios-device-discovery");
yok_1.injector.require("iOSSimulatorDiscovery", "./mobile/mobile-core/ios-simulator-discovery");
yok_1.injector.require("androidDeviceDiscovery", "./mobile/mobile-core/android-device-discovery");
yok_1.injector.require("androidEmulatorDiscovery", "./mobile/mobile-core/android-emulator-discovery");
yok_1.injector.require("iOSDevice", "./mobile/ios/device/ios-device");
yok_1.injector.require("iOSDeviceProductNameMapper", "./mobile/ios/ios-device-product-name-mapper");
yok_1.injector.require("androidDevice", "./mobile/android/android-device");
yok_1.injector.require("adb", "./mobile/android/android-debug-bridge");
yok_1.injector.require("androidDebugBridgeResultHandler", "./mobile/android/android-debug-bridge-result-handler");
yok_1.injector.require("androidVirtualDeviceService", "./mobile/android/android-virtual-device-service");
yok_1.injector.require("androidIniFileParser", "./mobile/android/android-ini-file-parser");
yok_1.injector.require("androidGenymotionService", "./mobile/android/genymotion/genymotion-service");
yok_1.injector.require("virtualBoxService", "./mobile/android/genymotion/virtualbox-service");
yok_1.injector.require("logcatHelper", "./mobile/android/logcat-helper");
yok_1.injector.require("iOSSimResolver", "./mobile/ios/simulator/ios-sim-resolver");
yok_1.injector.require("iOSSimulatorLogProvider", "./mobile/ios/simulator/ios-simulator-log-provider");
yok_1.injector.require("localToDevicePathDataFactory", "./mobile/local-to-device-path-data-factory");
yok_1.injector.requirePublic("devicesService", "./mobile/mobile-core/devices-service");
yok_1.injector.requirePublic("androidProcessService", "./mobile/mobile-core/android-process-service");
yok_1.injector.require("projectNameValidator", "./validators/project-name-validator");
yok_1.injector.require("androidEmulatorServices", "./mobile/android/android-emulator-services");
yok_1.injector.require("iOSEmulatorServices", "./mobile/ios/simulator/ios-emulator-services");
yok_1.injector.require("wp8EmulatorServices", "./mobile/wp8/wp8-emulator-services");
yok_1.injector.require("autoCompletionService", "./services/auto-completion-service");
yok_1.injector.requirePublic("settingsService", "./services/settings-service");
yok_1.injector.require("opener", "./opener");
yok_1.injector.require("microTemplateService", "./services/micro-templating-service");
yok_1.injector.require("mobileHelper", "./mobile/mobile-helper");
yok_1.injector.require("emulatorHelper", "./mobile/emulator-helper");
yok_1.injector.require("devicePlatformsConstants", "./mobile/device-platforms-constants");
yok_1.injector.require("helpService", "./services/help-service");
yok_1.injector.require("messageContractGenerator", "./services/message-contract-generator");
yok_1.injector.require("proxyService", "./services/proxy-service");
yok_1.injector.requireCommand("dev-preuninstall", "./commands/preuninstall");
yok_1.injector.requireCommand("dev-generate-messages", "./commands/generate-messages");
yok_1.injector.requireCommand("doctor|*all", "./commands/doctor");
yok_1.injector.requireCommand("doctor|ios", "./commands/doctor");
yok_1.injector.requireCommand("doctor|android", "./commands/doctor");
yok_1.injector.requireCommand("proxy|*get", "./commands/proxy/proxy-get");
yok_1.injector.requireCommand("proxy|set", "./commands/proxy/proxy-set");
yok_1.injector.requireCommand("proxy|clear", "./commands/proxy/proxy-clear");
yok_1.injector.require("utils", "./utils");
yok_1.injector.require("plistParser", "./plist-parser");
yok_1.injector.require("winreg", "./winreg");
yok_1.injector.require("loggingLevels", "./mobile/logging-levels");
yok_1.injector.require("logFilter", "./mobile/log-filter");
yok_1.injector.require("androidLogFilter", "./mobile/android/android-log-filter");
yok_1.injector.require("projectFilesManager", "./services/project-files-manager");
yok_1.injector.require("xcodeSelectService", "./services/xcode-select-service");
yok_1.injector.require("net", "./services/net-service");
yok_1.injector.require("qr", "./services/qr");
yok_1.injector.require(["lockfile", "lockService"], "./services/lock-service");
